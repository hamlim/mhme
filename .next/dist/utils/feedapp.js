'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _style = require('styled-jsx/style.js');

var _style2 = _interopRequireDefault(_style);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _link = require('next/dist/lib/link.js');

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/matt/development/mhme/utils/feedapp.js';

exports.default = function (_ref) {
  var feed = _ref.feed;
  return _react2.default.createElement('section', { className: 'wrap', 'data-jsx': 2164188247,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 5
    }
  }, _react2.default.createElement('ul', { className: 'list', 'data-jsx': 2164188247,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 6
    }
  }, feed.map(function (post, index) {
    return _react2.default.createElement('li', { key: index, 'data-jsx': 2164188247,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 8
      }
    }, _react2.default.createElement(_link2.default, { href: post.route ? post.route : { pathname: '/blog/post', query: { slug: '' + post.slug } }, __source: {
        fileName: _jsxFileName,
        lineNumber: 9
      }
    }, _react2.default.createElement('a', { className: 'link', 'data-jsx': 2164188247,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 11
      }
    }, _react2.default.createElement('div', { className: 'postcard', 'data-jsx': 2164188247,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 12
      }
    }, _react2.default.createElement('h4', { className: 'posttitle', 'data-jsx': 2164188247,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      }
    }, post.title), _react2.default.createElement('p', { className: 'postlede', 'data-jsx': 2164188247,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 14
      }
    }, post.lede && post.lede.substring(0, 65) + '...'), _react2.default.createElement('p', { className: 'posttime', 'data-jsx': 2164188247,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 17
      }
    }, 'Publication Date: ', post.day + ' of ' + post.month + ', ' + post.year)))));
  })), _react2.default.createElement(_style2.default, {
    styleId: 2164188247,
    css: '.link[data-jsx="2164188247"] {color: #F08080;text-decoration: none;}.link[data-jsx="2164188247"]:hover > .postcard[data-jsx="2164188247"],.link[data-jsx="2164188247"]:focus > .postcard[data-jsx="2164188247"] {box-shadow: 0 0 1em 0 #4169E1;}.list[data-jsx="2164188247"] {list-style: none;display: -ms-grid;display: grid;grid-gap: 1em;-ms-grid-columns: 1fr;grid-template-columns: 1fr;margin: 32px 0;margin: 2rem 0;}.postcard[data-jsx="2164188247"] {margin: 0 auto;max-width: 400px;max-width: 25rem;padding: 1em;border-radius: 5px;height: 100%;}.posttitle[data-jsx="2164188247"] {font-weight: bold;font-size: 32px;font-size: 2rem;margin-bottom: 1em;}.posttime[data-jsx="2164188247"] {color: var(--b-muted);}.postlede[data-jsx="2164188247"] {font-size: 20px;font-size: 1.25rem;margin: .5em 0;}@media screen and (min-width: 45rem) {.list[data-jsx="2164188247"] {-ms-grid-columns: 1fr 1fr 1fr;grid-template-columns: 1fr 1fr 1fr;}.postcard[data-jsx="2164188247"] {will-change: box-shadow;box-shadow: 0 0 1em 0 #eee;}}\n/*@ sourceURL=utils/feedapp.js */\n/*# sourceMappingURL=data:application/json;base64, */'
  }));
};